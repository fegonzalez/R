ls.str()
?list.files
?list.files
info()
nxt()
?list.files
t()
nxt()
nxt()
skip()
args()
args("list.files")
args(list.files)
args(rnorm)
old.dir <- gwtwd()
old.dir <- getwd()
list.dirs()
args(list.files)
args(list.dirs)
list.dirs(".", TRUE, FALSE)
dir.create("testdir")
args(name=setwd)
setwd("./testdir/")
getwd()
setwd("testdir")
pwd()
ls()
dir()
list.files()
list.files
list.dirs()
getwd()
setwd("testdir")
setwd(dir="../topics/")
setwd(dir="topics/")
setwd(dir="topics")
setwd(dir="testdir")
setwd("testdir")
getwd()
setwd("testdir")
getwd()
dir()
setwd("..")
getwd()
setwd("testdir")
getwd()
setwd("./testdir")
setwd("../testdir")
lidt()
list()
dir()
getwd()
setwd("manuals/testdir")
getwd()
nxt()
getwd()
nxt()
nxt()
skip()
nxt()
nfo()
info()
nxt()
nxt()
play()
getwd()
list()
list.files()
list.dirs()
list.dirs("..")
info()
nxt()
bye()
swirl()
fer
setwd
setwd("tstdir")
setwd("testdir")
skip()
swirl()
fer
nxt()
nxt()
nxt()
bye()
swirl()
fer
swirl()
fer
info()
dir.exists
dir.exists("testdir")
setwd("..")
getwd()
file.remove("testdir/")
list.dirs()
getwd()
setwd("manuals")
getwd()
setwd("testdir")
args(file.create)
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$mode
file.info("mytest.R")$mtime
x
class(x)
nxt()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
args(file.path)
file.path("folder1", "folder2") works.
file.path("folder1", "folder2")
play()
list.files()
next
nxt
nxt()
?dir.create()
?dir.create
?dir.create
t()
nxt()
?dir.create
?dir.create .
play()
nxt()
?dir.create
nxt()
?dir.create
?dir.create
quit()
?rep
?:
?':'
?´:´
?´:´
' 
'
´
?":"
"
"
´
seq(along.with=my_seq)
seq(along.with=my_seq/2)
seq(along.with=my_seq/2.0)
seq(along.with=my_seq-1)
seq(along.with=(my_seq-1))
my_seq
?along.with
?seq_along
seq_along(my_seq)
seq_along(my_seq-1)
seq_along(my_seq)-1
tf
x=2
y=3
x &y
x &&y
seq_along(my_seq)
x | y
x=0
x &y
x &&y
x|y
y & x | y
y | x & y
a
?isTRUE
?isTRUE
quit()
getwd()
list.files()
ls()
ls().str()
ls.str()
file.access("r.howto")
x
y
y
y==TRUE
y
y==yes
y=="yes"
z
is.na(x)
y
y
x
x <- c(TRUE, FALSE, NA)
x
y
y>0
y
y>7
?which
LETTERS
x
LE
LETTERS[c(3,5,7)]
LETTERS
LETTERS[c(-1,-3)]
x
x
seq_along(my_seq)
seq_along(my_seq+1)
seq_along(10)
seq_along(c(my_seq, 1))
library(swirl)
swirl()
fer
1
nxt
quit()
x
?paste
paste("fer", collapse=" ")
paste("fer", collapse=" ", "p2p2")
paste("fer", "gonz", "rod", collapse=" ")
paste(LETTERS)
paste(LETTERS, collapse=" ")
paste(LETTERS, collapse=" ", sep=";")
paste(LETTERS, sep=";")
paste(LETTERS)
paste0(LETTERS)
paste(LETTERS, collapse=" ", sep=";")
paste("fer", "gonz", "rod", collapse=" ", sep=";")
paste(LETTERS, collapse=" ", sep=";")
paste(LETTERS, collapse=" ", sep="_")
paste(LETTERS, collapse=" ", sep="")
paste(LETTERS, collapse=" ")
paste(LETTERS)
paste(LETTERS, sep=";")
paste("fer", "gonz", "rod", collapse=" ", sep=";")
paste("James", "Bond", collapse=" ", sep=";")
paste("James", "Bond", collapse=" ", sep=";")
?paste
paste("James", "Bond", collapse=" ", sep=";")
paste("James", "Bond", sep=";")
paste("James", "Bond", collapse=" ", sep=";")
nth
a
len(a)
length(a)
x
x <- c(NA, 2.13, 0.83, na, -0.34, 2, -1)
x <- c(NA, 2.13, 0.83, NA, -0.34, 2, -1)
z
x
x
x
x <- c(NA, 2.13, 0.83, NA, -0.34, 2, -1)
x[-1:-2]
x[-c(1:2)]
x[!is.na(x)]
y
y>0
y
x[1]
x[bpos]
x["bpos!]
x["bpos]
x["bpos"]
class(x)
class(LETTERS)
unclass(LETTERS)
unclass(x)
str(unclass(x))
str(unclass(LETTERS))
?match
?grep
?sample
x
my_data
my_na
my_na
complete.cases(my_na)
my_na
is.na(my_na)
my_na
is.na(my_data)
is.na(my_data)==TRUE
(is.na(my_data)==TRUE)
c(is.na(my_data)==TRUE)
sum(my_na)
my_data
na.omit(my_data)
exit
quit
quit()
quit()
my_na
sum(is.na(my_data))
Inf/Inf
Inf*Inf
Inf+Inf
exp(3)
exp(Inf)
exp(3, 2)
?exp
2e3
2^3
2^Inf
Inf^Inf
one_vector
dim(my_vector)
(one_vector <- 1:20)
dim(matrix(1:20))
cols(matrix(1:20))
col(matrix(1:20))
row(matrix(1:20))
col(matrix(1:20))
dim(matrix(1:20))
class(my_vector)
my_vector
library("data.table")
row(matrix(1:20))
?library
library(data.table)
install.packages("data.table")
1
qq
q()
ls()
rm =ls()
ls()
rm(list=ls())
ls()
chooseCRANmirror()
install.packages(data.table)
install.packages("data.table")
library(data.table)
my_matrix
my_matrix
?matrix
my_matrix
my_matrix
my_matrix
?data.frame
d <- data.frame()
letters[1:10]
I(letters[1:10])
?I
letters[1:10]
I(letters[1:10])
factor(letters[1:10])
d
d
row.names(dd)
d0
d0
d
d[, FALSE]
?colnames
dd
dd
NA
isTRUE(NA)
isFALSE(NA)
!isTRUE(NA)
a
a
quit()
my_matrix <- matrix()
my_matrix
my_matrix
my_matrix2
my_matrix2
L3
d0
dd
library(data.table)
airquality
head(airquality)
mydata
mydata
class(mydata)
class(mydata)
?data.frame
?data.frame
str(mydata)
summary(mydata)
dim(mydata)
mydata200
mean(mydata)
mean(mydata, na.rm=TRUE)
mydata[1]
head(mydata, 2)
mean(x=mydata$Ozone)
mean(x=mydata$Ozone, na.rm=TRUE)
?count.fields
d
rm(d)
s
d
X
sample(1:5)
which(mydf$v2 > 8)
mydata
copia <- mydf.head()
copia <- head(mydf)
copia
mydf
copia <- head(mydf, 2)
copia
mydf
?sort
?order
?plyr
library plyr
find.package("plyr")
install.packages("plyr")
?plyr
?arrange
library(plyr)
?arrange
?order
?order
?order
?order
ls
?sort
?order
mydf
order(mydf)
mydf
library(plyr)
mydf
?cut
x
y
x
?sort
?order
x
arrange(x)
order(x)
x[order(x)]
x(order(x))
?cut
cut(x)
?cut
?cut
x
cut(x)
cut(x, 2)
x
x
cut(x, 2)
cut(x, 2:3)
cut(x, -2:2)
mydf
mydata
head(mydata)
mydata$Ozone
mydata$Ozone>31
?head
mydata
head(mydata)
subset(mydata, Ozone>37 & Ozone < 40, select=c(1, 4)
)
sort(dd)
sort(dd, decreasing=TRUE)
sort(dd, decreasing=TRUE, na.last=T)
sort(dd[xval], decreasing=TRUE, na.last=T)
sort(dd[1, ], decreasing=TRUE, na.last=T)
sort(dd[, ], decreasing=TRUE, na.last=T)
sort(dd[,2], decreasing=TRUE, na.last=T)
sort(dd[,2:4], decreasing=TRUE, na.last=T)
sort(dd[,2:3], decreasing=TRUE, na.last=T)
sort(dd[,], decreasing=TRUE, na.last=T)
sort(dd[, 2], decreasing=TRUE, na.last=T)
dd
ordersort(dd)
order(dd)
order(dd, [1, ])
order(dd)
dd
order(dd[1])
dd[1]
dd[1:3]
dd[1:3]
order(dd[1:3])
mydata
head(mydata)
sort(mydata$Ozone, decreasing=TRUE, na.last=T)
order(mydata$v1,mydata$v3)
?cut
rm(mydata)
rm(mydf)
mydf
library(data.table)
rm(list=ls())
ls()
quit()
